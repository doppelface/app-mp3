version: 2.22.0

services:
  postgres:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-mp3

  zookeeper:
    image: zookeeper:latest
    restart: always
    ports:
      - 2181:2181
    networks:
      - app-mp3

  kafka:
    image: bitnami/kafka:latest
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - app-mp3

  song-service:
    restart: always
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - app-mp3

  process-service:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka
      - song-service
    networks:
      - app-network

    file-service:
      build:
        context: .
        dockerfile: Dockerfile
      environment:
        AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
        AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
        AWS_REGION: eu-north-1
        S3_BUCKET_NAME: mp3-access-s3-bucket
        KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      depends_on:
        - kafka
      networks:
        - app-network

networks:
  app-mp3:
    driver: bridge

volumes:
  postgres_data:
